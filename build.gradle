buildscript {
    ext {
        kotlinVersion = '1.1.51'
        springBootVersion = '1.5.8.RELEASE'
        camelVersion = '2.20.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "kotlin-allopen"

version = '0.1.0-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = sourceCompatibility
}
compileTestKotlin {
    kotlinOptions.jvmTarget = sourceCompatibility
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.apache.camel:camel-spring-boot-starter:${camelVersion}")
    compile("org.apache.camel:camel-aws:${camelVersion}")
    compile("org.apache.camel:camel-ftp:${camelVersion}")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile('org.springframework.boot:spring-boot-configuration-processor')
    compile("org.apache.httpcomponents:httpclient:4.5.3")
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

compileKotlin.dependsOn(processResources)
